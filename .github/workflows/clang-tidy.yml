name: wolfssl-gnutls-wrapper clang-tidy

on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clang_tidy:
    timeout-minutes: 20
    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    container:
      image: debian:bookworm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install clang + bear (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          apt-get update
          apt-get install -y clang bear sudo wget git

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y gnulib autopoint gperf gtk-doc-tools nettle-dev clang \
            libtasn1-bin libtasn1-6-dev libunistring-dev libp11-kit-dev libunbound-dev clang-tidy

      # ─────────────── cache the wolfssl/gnutls tool-chain ────────────────
      - name: Restore cached gnutls-wolfssl
        id: cache-gnutls
        uses: actions/cache@v4
        with:
          path: |
            /opt/gnutls
            /opt/wolfssl
            /opt/wolfssl-gnutls-wrapper
          key: gnutls-wolfssl-${{ runner.os }}-${{ hashFiles('setup.sh', 'wolfssl-gnutls-wrapper/**', 'wolfssl/**', 'gnutls/**') }}
          restore-keys: |
            gnutls-wolfssl-${{ runner.os }}-

      # Build only if cache was missed
      - name: Build wolfssl/gnutls stack
        if: steps.cache-gnutls.outputs.cache-hit != 'true'
        run: |
          GNUTLS_INSTALL=/opt/gnutls WOLFSSL_INSTALL=/opt/wolfssl ./setup.sh

      - name: Build wrapper under Bear
        run: |
          cd wolfssl-gnutls-wrapper
          make clean
          bear -- make -j"$(sysctl -n hw.logicalcpu 2>/dev/null || nproc)"

      - name: Run clang-tidy
        run: |
          FILES=$(find wolfssl-gnutls-wrapper/src wolfssl-gnutls-wrapper/tests -name "*.c" -type f)
          clang-tidy -p wolfssl-gnutls-wrapper $FILES

